<blocks app="Snap! 7, https://snap.berkeley.edu" version="2"><palette><category name="Advanced eBrain" color="0,116,143,1"/></palette><block-definition s="addJS %&apos;JS_FILE&apos;" type="command" category="other"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>JS_FILE</l></list><l>var po = document.createElement(&apos;script&apos;);&#xD;  po.type = &apos;text/javascript&apos;;&#xD;  po.async = true;&#xD;  po.innerHTML = JS_FILE;&#xD;  var s = document.getElementsByTagName(&apos;script&apos;)[0];&#xD;  s.parentNode.insertBefore(po, s)</l></block><list><block var="JS_FILE"/></list></block></script></block-definition><block-definition s="addJS URL %&apos;url&apos;" type="command" category="other"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>url</l></list><l>var po = document.createElement(&apos;script&apos;);&#xD;  po.type = &apos;text/javascript&apos;;&#xD;  po.async = true;&#xD;  po.src = url;&#xD;  var s = document.getElementsByTagName(&apos;script&apos;)[0];&#xD;  s.parentNode.insertBefore(po, s)</l></block><list><block var="url"/></list></block></script></block-definition><block-definition s="Run Teachable Machine Model %&apos;URL&apos;" type="command" category="Advanced eBrain"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><custom-block s="addJS %s"><block s="reportJoinWords"><list><l>URL = "</l><block var="URL"/><l>";</l></list></block></custom-block><block s="doIf"><block s="evaluate"><block s="reportJSFunction"><list><l></l></list><l>return (typeof teachableMachineAdded === &apos;undefined&apos;)</l></block><list></list></block><script><block s="doRun"><block s="reportJSFunction"><list><l></l></list><l>alert("Please Wait -- Adding Teachable Machine Model to SNAP -- When you see the request for your webcam or microphone, then the model has loaded successfully");</l></block><list></list></block><custom-block s="addJS URL %s"><l>https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js</l></custom-block><custom-block s="addJS URL %s"><l>https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js</l></custom-block><block s="doWait"><l>4</l></block><custom-block s="addJS %s"><l>let model,webcam,labelContainer,maxPredictions;const predictionList=[];async function init(){const a=URL+"model.json",t=URL+"metadata.json";model=await tmImage.load(a,t),maxPredictions=model.getTotalClasses();webcam=new tmImage.Webcam(200,200,!0),await webcam.setup(),await webcam.play(),window.requestAnimationFrame(loop)}async function loop(){webcam.update(),await predict(),window.requestAnimationFrame(loop)}async function predict(){const a=await model.predict(webcam.canvas);for(let t=0;t&lt;maxPredictions;t++){const e=a[t].probability.toFixed(2);predictionList[t]=e}}</l></custom-block><custom-block s="addJS %s"><l>let teachableMachineAdded = 1;</l></custom-block></script></block><block s="doWait"><l>8</l></block><block s="doRun"><block s="reportJSFunction"><list><l></l></list><l>init().catch(function(e) {&#xD;  if (e.includes("camera") || e.includes("webcam")) {&#xD;    alert("An error has occurred, you may have forgotten to allow your camera access.");&#xD;  } else {&#xD;    alert("Some other error has occurred: " + e);&#xD;  }&#xD;  console.log(e);&#xD;});</l></block><list></list></block></script></block-definition><block-definition s="Class %&apos;i&apos; Confidence Level" type="reporter" category="Advanced eBrain"><header></header><code></code><translations></translations><inputs><input type="%n">1</input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l></l></list><block s="reportJoinWords"><list><l>return predictionList[</l><block s="reportDifference"><block var="i"/><l>1</l></block><l>]</l></list></block></block><list></list></block></block></script></block-definition></blocks>